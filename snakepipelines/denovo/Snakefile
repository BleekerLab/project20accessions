##############################################################################################################
# Produce de novo assembly of RNA-Seq reads + differential analysis + annotation of the assembled transcripts#
##############################################################################################################
import pandas as pd

#############
# Parameters
############@
# configuration file 
configfile: "config.yaml"

# get samples and units
samples = pd.read_table(config["samples"], index_col="sample")
units = pd.read_table(config["units"], index_col=["sample", "unit"], dtype=str)
units.index = units.index.set_levels([i.astype(str) for i in units.index.levels])  # enforce str in index
 
wildcard_constraints:
    sample = "[A-Za-z0-9]+"

# working directory (files will be removed from here)
WORKING_DIR = config["working_dir"]
RESULT_DIR = config["result_dir"]

# Trimmomatic (read trimming)
ADAPTERS_ILLUMINA = config["adapters"]

# Trinity & related tools parameters 

##################
# Helper functions
##################
def get_fastq(wildcards):
    return units.loc[[wildcards.sample, wildcards.unit], ["fq1", "fq2"]].dropna()

def get_forward_fastq(wildcards):
    return units.loc[[wildcards.sample, wildcards.unit], "fq1"].dropna()

def get_reverse_fastq(wildcards):
    return units.loc[[wildcards.sample, wildcards.unit], "fq2"].dropna()


###########
##  Outputs 
###########/home/mgalland/data/01_sequencing_runs/20171123_F1_lines_LA1777_PI127826_Cv/

MASTER_FILES = [RESULT_DIR + f for f in ["config.yaml","Snakefile"]]
TRIMMED = expand(WORKING_DIR + "trimmed/{sample}_{unit}.{read}.fastq.gz",sample=samples,unit=units,read=["forward","reverse"])

rule all:
	input:
		TRIMMED,
		MASTER_FILES
	message:"all done"

#####################
## Copy master files
####################
rule copy_master_files:
    input:
        "Snakefile",
        "config.yaml"
    output: 
        RESULT_DIR + "Snakefile",
        RESULT_DIR + "config.yaml"
    shell:
        "cp {input} results/"

#####################################    
# de novo assembly of the reads
######################################


###########################
## Paired end read trimming
###########################
rule trimmomatic:
    input:
        ADAPTERS_ILLUMINA,
        forward = get_forward_fastq,
        reverse = get_reverse_fastq
    output:
        forward  = WORKING_DIR + "trimmed/{sample}_{unit}.forward.fastq.gz",
        reverse = WORKING_DIR + "trimmed/{sample}_{unit}.reverse.fastq.gz",
        forwardUnpaired  = temp(WORKING_DIR + "trimmed/{sample}_{unit}_forward_unpaired.fastq.gz"),
        reverseUnpaired = temp(WORKING_DIR + "trimmed/{sample}_{unit}_reverse_unpaired.fastq.gz")
    message:"Trimming Illumina {wildcards.sample} Illumina paired-end reads from {wildcards.unit}"
    params :
        seedMisMatches =            str(config['trimmomatic']['seedMisMatches']),
        palindromeClipTreshold =    str(config['trimmomatic']['palindromeClipTreshold']),
        simpleClipThreshhold =      str(config['trimmomatic']['simpleClipThreshold']),
        LeadMinTrimQual =           str(config['trimmomatic']['LeadMinTrimQual']),
        TrailMinTrimQual =          str(config['trimmomatic']['TrailMinTrimQual']),
        windowSize =                str(config['trimmomatic']['windowSize']),
        avgMinQual =                str(config['trimmomatic']['avgMinQual']),
        minReadLen =                str(config['trimmomatic']['minReadLength']),
        phred = 		    str(config["trimmomatic"]["phred"])
    threads: 10
    shell:
        "trimmomatic PE {params.phred} -threads {threads} "
        "{input.forward} {input.reverse} "
        "{output.forward} {output.forwardUnpaired} "
        "{output.reverse} {output.reverseUnpaired} "
        "ILLUMINACLIP:{ADAPTERS_ILLUMINA}:{params.seedMisMatches}:{params.palindromeClipTreshold}:{params.simpleClipThreshhold} "
        "LEADING:{params.LeadMinTrimQual} "
        "TRAILING:{params.TrailMinTrimQual} "
        "SLIDINGWINDOW:{params.windowSize}:{params.avgMinQual} "
        "MINLEN:{params.minReadLen}"          
